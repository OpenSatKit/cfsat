<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2022 bitValence, Inc.
    All Rights Reserved.

    This program is free software; you can modify and/or redistribute it
    under the terms of the GNU Affero General Public License
    as published by the Free Software Foundation; version 3 with
    attribution addendums as found in the LICENSE.txt.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.
      
    Purpose: 
      This describes all interface objects for the OpenSatKit(OSK) File
      Transfer (FILE_XFER) application.

    Notes:
      1. This document adheres to the Electronic Data Sheet (EDS) XML schema 
         as prescribed in CCSDS book 876.0. 

-->
<PackageFile xmlns="http://www.ccsds.org/schema/sois/seds">
  <Package name="FILE_XFER" shortDescription="Manage file transfers">
    <DataTypeSet>


      <!--***********************************-->
      <!--**** DataTypeSet:  Entry Types ****-->
      <!--***********************************-->
    
      <EnumeratedDataType name="BooleanUint8" shortDescription="8-bit Boolean for commands" >
        <IntegerDataEncoding sizeInBits="8" encoding="unsigned" />
        <EnumerationList>
          <Enumeration label="FALSE" value="0" shortDescription="" />
          <Enumeration label="TRUE"  value="1" shortDescription="" />
        </EnumerationList>
      </EnumeratedDataType>

      <EnumeratedDataType name="BooleanUint16" shortDescription="8-bit Boolean for commands" >
        <IntegerDataEncoding sizeInBits="16" encoding="unsigned" />
        <EnumerationList>
          <Enumeration label="FALSE" value="0" shortDescription="" />
          <Enumeration label="TRUE"  value="1" shortDescription="" />
        </EnumerationList>
      </EnumeratedDataType>

      <EnumeratedDataType name="FotpTransferState" shortDescription="" >
        <IntegerDataEncoding sizeInBits="8" encoding="unsigned" />
        <EnumerationList>
          <Enumeration label="UNDEF"     value="0" shortDescription="" />
          <Enumeration label="IDLE"      value="1" shortDescription="" />
          <Enumeration label="START"     value="2" shortDescription="" />
          <Enumeration label="SEND_DATA" value="3" shortDescription="" />
          <Enumeration label="FINISH"    value="4" shortDescription="" />
          <Enumeration label="PAUSED"    value="5" shortDescription="" />
        </EnumerationList>
      </EnumeratedDataType>

      <StringDataType name="FitpDataSegment" length="${FILE_XFER/FITP_DATA_SEG_MAX_LEN}" shortDescription="" />
      <StringDataType name="FotpDataSegment" length="${FILE_XFER/FOTP_DATA_SEG_MAX_LEN}" shortDescription="" />

      <!-- Failed attempts
      <ArrayDataType name="FitpDataBlock" dataTypeRef="BASE_TYPES/uint8">
        <DimensionList>
           <Dimension size="${FILE_XFER/FITP_DATA_SEG_MAX_LEN}"/>
        </DimensionList>
      </ArrayDataType>
      <BinaryDataType name="FitpDataBlock">

      <ArrayDataType name="FotpDataBlock" dataTypeRef="BASE_TYPES/uint8">
        <DimensionList>
           <Dimension size="${FILE_XFER/FOTP_DATA_SEG_MAX_LEN}"/>
        </DimensionList>
      </ArrayDataType>
      -->
      
            
      <!--***************************************-->
      <!--**** DataTypeSet: Command Payloads ****-->
      <!--***************************************-->

      <!-- FileXfer::Fitp -->

      <ContainerDataType name="FitpStartTransfer_Payload">
        <EntryList>
          <Entry name="DestFilename" type="BASE_TYPES/PathName" shortDescription="path/filename of file to be received" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="FitpDataSegment_Payload">
        <EntryList>
          <Entry name="Id"    type="BASE_TYPES/uint16"  shortDescription="Integer identifier that increments for each sequential segement" />
          <Entry name="Len"   type="BASE_TYPES/uint16"  shortDescription="Number of data bytes in the data blosk" />
          <Entry name="Data"  type="FitpDataSegment"    shortDescription="Data must be defined last because it is variable length" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="FitpFinishTransfer_Payload">
        <EntryList>
          <Entry name="FileLen"           type="BASE_TYPES/uint32" shortDescription="Total file length in bytes" />
          <Entry name="FileCrc"           type="BASE_TYPES/uint32" shortDescription="File CRC" />
          <Entry name="LastDataSegmentId" type="BASE_TYPES/uint16" shortDescription="Identifer of the last data segmnet sent" />
        </EntryList>
      </ContainerDataType>


      <!-- FileXfer::Fotp -->


      <ContainerDataType name="FotpStartTransfer_Payload">
        <EntryList>
          <Entry name="DataSegLen"     type="BASE_TYPES/uint32"   shortDescription="Length of data segment telmeetry packets. Must be less than FILE_XFER/FOTP_DATA_SEG_MAX_LEN" />
          <Entry name="DataSegOffset"  type="BASE_TYPES/uint16"   shortDescription="Starting segment number. Typically 0 unless resuming an incomplete transfer" />
          <Entry name="SrcFilename"    type="BASE_TYPES/PathName" shortDescription="path/filename of file to be sent" />
        </EntryList>
      </ContainerDataType>


      <!--*****************************************-->
      <!--**** DataTypeSet: Telemetry Payloads ****-->
      <!--*****************************************-->

      
      <!-- FileXfer::App -->


      <ContainerDataType name="HkTlm_Fitp_Payload" shortDescription="File Input Transport Protocol HK data">
        <EntryList>
          <Entry name="FileTransferCnt"     type="BASE_TYPES/uint8"    shortDescription="Number of complete file transfers" />
          <Entry name="FileTransferActive"  type="BASE_TYPES/uint8"    shortDescription="Boolean indicating whether file transfer active" />
          <Entry name="LastDataSegmentId"   type="BASE_TYPES/uint16"   shortDescription="ID of the last data segment saved to file" />
          <Entry name="DataSegmentErrCnt"   type="BASE_TYPES/uint16"   shortDescription="Count of data segments with errors" />
          <Entry name="FileTransferByteCnt" type="BASE_TYPES/uint32"   shortDescription="Number of file data bytes received/written" />
          <Entry name="FileRunningCrc"      type="BASE_TYPES/uint32"   shortDescription="Running CRC of file data received" />
          <Entry name="DestFilename"        type="BASE_TYPES/PathName" shortDescription="path/filename of file being received" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="HkTlm_Fotp_Payload" shortDescription="File Output Transport Protocol HK data">
        <EntryList>
          <Entry name="FileTransferCnt"     type="BASE_TYPES/uint8"  shortDescription="Number of complete file transfers" />
          <Entry name="FileTransferState"   type="FotpTransferState" shortDescription="See type definition" />
          <Entry name="PausedTransferState" type="FotpTransferState" shortDescription="Identify which state was paused" />
          <Entry name="PrevSegmentFailed"   type="BooleanUint8"      shortDescription="If true then FOTP attempts to resend" />
          <Entry name="FileTransferByteCnt" type="BASE_TYPES/uint32" shortDescription="Number of file data bytes received/written" />
          <Entry name="FileRunningCrc"      type="BASE_TYPES/uint32" shortDescription="Running CRC of file data received" />

          <Entry name="DataTransferLen"     type="BASE_TYPES/uint32" shortDescription="" />
          <Entry name="FileLen"             type="BASE_TYPES/uint32" shortDescription="" />
          <Entry name="FileByteOffset"      type="BASE_TYPES/uint32" shortDescription="DataSegmentOffset*DataSegmentLen" />
          
          <Entry name="DataSegmentLen"      type="BASE_TYPES/uint16" shortDescription="Length in start transfer command" />
          <Entry name="DataSegmentOffset"   type="BASE_TYPES/uint16" shortDescription="Starting data segment" />
          <Entry name="NextDataSegmentId"   type="BASE_TYPES/uint16" shortDescription="Starting data segment" />

          <Entry name="SrcFilename"         type="BASE_TYPES/PathName" shortDescription="path/filename of file being sent" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="HkTlm_Payload" shortDescription="App's state and status summary, 'housekeeping data'">
        <EntryList>
          <Entry name="ValidCmdCnt"    type="BASE_TYPES/uint16" />
          <Entry name="InvalidCmdCnt"  type="BASE_TYPES/uint16" />
          <Entry name="Fitp"           type="HkTlm_Fitp_Payload" />
          <Entry name="Fotp"           type="HkTlm_Fotp_Payload" />
        </EntryList>
      </ContainerDataType>
      
      
      <!-- FileXfer::FOTP -->


      <ContainerDataType name="FotpStartTransferTlm_Payload" shortDescription="">
        <EntryList>
          <Entry name="DataLen"      type="BASE_TYPES/uint32" shortDescription="Either file length or file length minus commanded segment offset" />
          <Entry name="SrcFilename"  type="BASE_TYPES/PathName" shortDescription="path/filename of file being sent" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="FotpDataSegmentTlm_Payload" shortDescription="">
        <EntryList>
          <Entry name="Id"    type="BASE_TYPES/uint16" shortDescription="Integer identifier that increments for each sequential segement" />
          <Entry name="Len"   type="BASE_TYPES/uint16" shortDescription="Either file length or file length minus commanded segment offset" />
          <Entry name="Data"  type="FotpDataSegment"   shortDescription="Data must be defined last because it is variable length" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="FotpFinishTransferTlm_Payload" shortDescription="">
        <EntryList>
          <Entry name="FileLen"           type="BASE_TYPES/uint32" shortDescription="Total file length in bytes" />
          <Entry name="FileCrc"           type="BASE_TYPES/uint32" shortDescription="File CRC" />
          <Entry name="LastDataSegmentId" type="BASE_TYPES/uint16" shortDescription="Identifer of the last data segmnet sent" />
        </EntryList>
      </ContainerDataType>


            
      <!--**************************************-->
      <!--**** DataTypeSet: Command Packets ****-->
      <!--**************************************-->

      <ContainerDataType name="CommandBase" baseType="CFE_HDR/CommandHeader">
      </ContainerDataType>

      <ContainerDataType name="Noop" baseType="CommandBase" shortDescription="Generate an info event message with app version">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${OSK_C_FW/NOOP_CC}" />
        </ConstraintSet>
      </ContainerDataType>

      <ContainerDataType name="Reset" baseType="CommandBase" shortDescription="Reset app to a known state">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${OSK_C_FW/RESET_CC}" />
        </ConstraintSet>
      </ContainerDataType>

      <!-- FileXfer::Fitp -->
    
      <!-- 
        There two categories of commands:
           1. User issued commands that have user goal oriented names
           2. Protocal commands used to implement FITP have technical names that describe their role in the protocol
      -->

      <ContainerDataType name="SendFile" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${OSK_C_FW/APP_BASE_CC} + 0" />
        </ConstraintSet>
        <EntryList>
          <Entry type="FitpStartTransfer_Payload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="SendFitpDataSegment" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${OSK_C_FW/APP_BASE_CC} + 1" />
        </ConstraintSet>
        <EntryList>
          <Entry type="FitpDataSegment_Payload" name="Payload" />
        </EntryList>
      </ContainerDataType>
      
      <ContainerDataType name="FinishFitpTransfer" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${OSK_C_FW/APP_BASE_CC} + 2" />
        </ConstraintSet>
        <EntryList>
          <Entry type="FitpFinishTransfer_Payload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="CancelSendFile" baseType="CommandBase" shortDescription="Cancel a send file transfer in progress">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${OSK_C_FW/APP_BASE_CC} + 3" />
        </ConstraintSet>
      </ContainerDataType>

      <!-- FileXfer::Fotp -->

      <ContainerDataType name="StartReceiveFile" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${OSK_C_FW/APP_BASE_CC} + 4" />
        </ConstraintSet>
        <EntryList>
          <Entry type="FotpStartTransfer_Payload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="PauseReceiveFile" baseType="CommandBase" shortDescription="Pause a receive file transaction">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${OSK_C_FW/APP_BASE_CC} + 5" />
        </ConstraintSet>
      </ContainerDataType>

      <ContainerDataType name="ResumeReceiveFile" baseType="CommandBase" shortDescription="Resume a receive file transaction">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${OSK_C_FW/APP_BASE_CC} + 6" />
        </ConstraintSet>
      </ContainerDataType>

      <ContainerDataType name="CancelReceiveFile" baseType="CommandBase" shortDescription="Cancel a receive file transaction">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${OSK_C_FW/APP_BASE_CC} + 7" />
        </ConstraintSet>
      </ContainerDataType>
    

      <!--****************************************-->
      <!--**** DataTypeSet: Telemetry Packets ****-->
      <!--****************************************-->

      <!-- FileMgr::App -->

      <ContainerDataType name="HkTlm" baseType="CFE_HDR/TelemetryHeader">
        <EntryList>
          <Entry type="HkTlm_Payload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <!-- FileMgr::Fotp -->

      <ContainerDataType name="FotpStartTransferTlm" baseType="CFE_HDR/TelemetryHeader">
        <EntryList>
          <Entry type="FotpStartTransferTlm_Payload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="FotpDataSegmentTlm" baseType="CFE_HDR/TelemetryHeader">
        <EntryList>
          <Entry type="FotpDataSegmentTlm_Payload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="FotpFinishTransferTlm" baseType="CFE_HDR/TelemetryHeader">
        <EntryList>
          <Entry type="FotpFinishTransferTlm_Payload" name="Payload" />
        </EntryList>
      </ContainerDataType>

    </DataTypeSet>

        
    <ComponentSet>
      <Component name="Application">

        <!--***********************************-->
        <!--**** Component Set: Interfaces ****-->
        <!--***********************************-->

        <RequiredInterfaceSet>
          <Interface name="CMD" shortDescription="Software bus telecommand interface" type="CFE_SB/Telecommand">
            <GenericTypeMapSet>
              <GenericTypeMap name="TelecommandDataType" type="CommandBase" />
            </GenericTypeMapSet>
          </Interface>
          <Interface name="EXE_APP" shortDescription="Signal app to execute command interface" type="CFE_SB/Telecommand">
             <!-- This uses a bare spacepacket with no payload -->
             <GenericTypeMapSet>
                <GenericTypeMap name="TelecommandDataType" type="CFE_HDR/CommandHeader" />
             </GenericTypeMapSet>
          </Interface>
          <Interface name="SEND_HK" shortDescription="Signal app to send its housekeeping telemetry command interface" type="CFE_SB/Telecommand">
            <!-- This uses a bare spacepacket with no payload -->
            <GenericTypeMapSet>
              <GenericTypeMap name="TelecommandDataType" type="CFE_HDR/CommandHeader" />
            </GenericTypeMapSet>
          </Interface>
          
          <Interface name="HK_TLM" shortDescription="Software bus housekeeping telemetry interface" type="CFE_SB/Telemetry">
            <GenericTypeMapSet>
              <GenericTypeMap name="TelemetryDataType" type="HkTlm" />
            </GenericTypeMapSet>
          </Interface>
          <Interface name="FOTP_START_TRANSFER_TLM" shortDescription="Start a file output data transfer" type="CFE_SB/Telemetry">
            <GenericTypeMapSet>
              <GenericTypeMap name="TelemetryDataType" type="FotpStartTransferTlm" />
            </GenericTypeMapSet>
          </Interface>
          <Interface name="FOTP_DATA_SEGMENT_TLM" shortDescription="Send a file data segment" type="CFE_SB/Telemetry">
            <GenericTypeMapSet>
              <GenericTypeMap name="TelemetryDataType" type="FotpDataSegmentTlm" />
            </GenericTypeMapSet>
          </Interface>
          <Interface name="FOTP_FINISH_TRANSFER_TLM" shortDescription="Complete a file output data transfer" type="CFE_SB/Telemetry">
            <GenericTypeMapSet>
              <GenericTypeMap name="TelemetryDataType" type="FotpFinishTransferTlm" />
            </GenericTypeMapSet>
          </Interface>
        </RequiredInterfaceSet>

        <!--***************************************-->
        <!--**** Component Set: Implementation ****-->
        <!--***************************************-->

        <Implementation>
          <VariableSet>
            <Variable type="BASE_TYPES/uint16" readOnly="true" name="CmdTopicId"                  initialValue="${CFE_MISSION/FILE_XFER_CMD_TOPICID}" />
            <Variable type="BASE_TYPES/uint16" readOnly="true" name="ExeAppTopicId"               initialValue="${CFE_MISSION/FILE_XFER_EXE_TOPICID}" />
            <Variable type="BASE_TYPES/uint16" readOnly="true" name="SendHkTopicId"               initialValue="${CFE_MISSION/FILE_XFER_SEND_HK_TOPICID}" />
            <Variable type="BASE_TYPES/uint16" readOnly="true" name="HkTlmTopicId"                initialValue="${CFE_MISSION/FILE_XFER_HK_TLM_TOPICID}" />
            <Variable type="BASE_TYPES/uint16" readOnly="true" name="FotpStartTransferTlmTopicId" initialValue="${CFE_MISSION/FILE_XFER_FOTP_START_TRANSFER_TLM_TOPICID}" />
            <Variable type="BASE_TYPES/uint16" readOnly="true" name="FotpDataSegmentTlmTopicId"   initialValue="${CFE_MISSION/FILE_XFER_FOTP_DATA_SEGMENT_TLM_TOPICID}" />
            <Variable type="BASE_TYPES/uint16" readOnly="true" name="FotpFinishSegmentTlmTopicId" initialValue="${CFE_MISSION/FILE_XFER_FOTP_FINISH_TRANSFER_TLM_TOPICID}" />
          </VariableSet>
          <!-- Assign fixed numbers to the "TopicId" parameter of each interface -->
          <ParameterMapSet>          
            <ParameterMap interface="CMD"                      parameter="TopicId" variableRef="CmdTopicId" />
            <ParameterMap interface="EXE_APP"                  parameter="TopicId" variableRef="ExeAppTopicId" />
            <ParameterMap interface="SEND_HK"                  parameter="TopicId" variableRef="SendHkTopicId" />
            <ParameterMap interface="HK_TLM"                   parameter="TopicId" variableRef="HkTlmTopicId" />
            <ParameterMap interface="FOTP_START_TRANSFER_TLM"  parameter="TopicId" variableRef="FotpStartTransferTlmTopicId" />
            <ParameterMap interface="FOTP_DATA_SEGMENT_TLM"    parameter="TopicId" variableRef="FotpDataSegmentTlmTopicId" />
            <ParameterMap interface="FOTP_FINISH_TRANSFER_TLM" parameter="TopicId" variableRef="FotpFinishSegmentTlmTopicId" />
          </ParameterMapSet>
        </Implementation>
      </Component>
    </ComponentSet>
    
  </Package>
</PackageFile>
